{"version":3,"sources":["../src/PlotlyEditor.js"],"names":["PlotlyEditor","props","columnName","state","fetchedColumns","includes","setTimeout","setChartingData","data","Math","random","update","key","columnId","dataSources","Array","isArray","length","getChartingData","graphDiv","editorRevision","plotRevision","loading","PlotComponent","plotly","handleRender","bind","setChartingDataOptions","columnNames","setState","dataSourceOptions","map","name","value","label","newDataSources","layout","response","onUpdate","args","x","trace","handleEditorUpdateTraces","fig","onRender","_transitionData","_frames","hideControls","handleEditorUpdate","advancedTraceTypeSelector","locale","traceTypesConfig","dictionaries","showFieldTooltips","srcConverters","makeDefaultTrace","glByDefault","Boolean","config","mapboxAccessToken","fontOptions","chartHelp","customConfig","children","width","height","frames","useResizeHandler","debug","divId","prevState","JSON","stringify","Component","propTypes","PropTypes","any","object","array","func","bool","string","shape","toSrc","isRequired","fromSrc","defaultProps","DEFAULT_FONTS"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport createPlotComponent from 'react-plotly.js/factory';\nimport EditorControls from './EditorControls';\nimport PropTypes from 'prop-types';\nimport {DEFAULT_FONTS} from 'lib/constants';\nimport dereference from 'lib/dereference';\n\nclass PlotlyEditor extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      graphDiv: {},\n      editorRevision: 0,\n      plotRevision: 0,\n      dataSources: {},\n      fetchedColumns: [],\n      loading: false\n    };\n    this.PlotComponent = createPlotComponent(props.plotly);\n    this.handleRender = this.handleRender.bind(this);\n    this.setChartingData = this.setChartingData.bind(this);\n    this.setChartingDataOptions = this.setChartingDataOptions.bind(this);\n  }\n\n  componentDidMount() {\n    this.setChartingDataOptions([\n      'col1',\n      'col2',\n      'col3',\n      'col4',\n      'col5',\n      'col6',\n      'headers',\n      'columns',\n      'fillcolor',\n      'headerColor'\n    ]); // add the options\n\n    setTimeout(\n      () =>\n        this.setChartingData({\n          columnName: 'headers',\n          data: ['']\n        }),\n      3000\n    );\n    setTimeout(\n      () =>\n        this.setChartingData({\n          columnName: 'headerColor',\n          data: ['#eecccc']\n        }),\n      3100\n    );\n    setTimeout(\n      () =>\n        this.setChartingData({\n          columnName: 'columns',\n          data: [[10.3]]\n        }),\n      3500\n    );\n    setTimeout(\n      () =>\n        this.setChartingData({\n          columnName: 'fillcolor',\n          data: 'rgba(0,255,0,0)'\n        }),\n      3600\n    );\n    setTimeout(\n      () =>\n        this.setChartingData({\n          columnName: 'parent',\n          data: ['', 'Eve', 'Eve', 'Seth', 'Seth', 'Eve', 'Eve', 'Awan', 'Eve']\n        }),\n      4000\n    );\n    setTimeout(\n      () => this.setChartingData({columnName: 'value', data: [10, 14, 12, 10, 2, 6, 6, 4, 4]}),\n      5000\n    );\n  }\n\n  static getDerivedStateFromProps(\n    {data, layout, frames, dataSources, dataSourceOptions},\n    prevState\n  ) {\n    if (\n      JSON.stringify(data) !== JSON.stringify(prevState.graphDiv.data) ||\n      JSON.stringify(layout) !== JSON.stringify(prevState.graphDiv.layout) ||\n      JSON.stringify(frames) !== JSON.stringify(prevState.graphDiv.frames) ||\n      JSON.stringify(dataSources) !== JSON.stringify(prevState.dataSources) ||\n      JSON.stringify(dataSourceOptions) !== JSON.stringify(prevState.dataSourceOptions)\n    ) {\n      return {\n        ...prevState,\n        dataSources,\n        dataSourceOptions,\n        graphDiv: {\n          ...prevState.graphDiv,\n          data,\n          layout,\n          frames\n        }\n      };\n    }\n    return null;\n  }\n\n  getChartingData = (columnName) => {\n    if (!this.state.fetchedColumns.includes(columnName)) {\n      setTimeout(\n        () =>\n          this.setChartingData({\n            columnName,\n            data: [\n              10 * Math.random(),\n              10 * (Math.random() + 1),\n              10 * (Math.random() + 2),\n              10 * (Math.random() + 3)\n            ]\n          }),\n        2000\n      );\n    }\n  };\n\n  setChartingDataOptions(columnNames) {\n    this.setState({\n      dataSourceOptions: columnNames.map((name) => ({\n        value: name,\n        label: name\n      }))\n    });\n  }\n\n  setChartingData({columnName, data}) {\n    if (Array.isArray(data) && data.length) {\n      this.setState(({dataSources, graphDiv, plotRevision, fetchedColumns}) => {\n        const newDataSources = {...dataSources, [columnName]: data};\n        dereference(graphDiv.data, newDataSources);\n        dereference(graphDiv.layout, newDataSources);\n        return {\n          dataSources: newDataSources,\n          graphDiv,\n          plotRevision: plotRevision + 1,\n          fetchedColumns: [...fetchedColumns, columnName]\n        };\n      });\n    }\n  }\n\n  handleEditorUpdateTraces = (update) => {\n    for (const key in update) {\n      if (key.includes('src') || key === 'x' || key === 'y') {\n        const columnId = update[key];\n        const data = this.state.dataSources[columnId];\n        if (!Array.isArray(data).length || !data.length) {\n          this.getChartingData(columnId);\n        }\n      }\n    }\n  };\n\n  handleEditorUpdate(update, ...args) {\n    let response;\n    if (this.props.onUpdate) {\n      response = this.props.onUpdate(update, ...args);\n    }\n    this.setState(({plotRevision: x}) => ({plotRevision: x + 1}));\n    if (update) {\n      for (const trace of update) {\n        this.handleEditorUpdateTraces(trace);\n      }\n    }\n    return response;\n  }\n\n  handleRender(fig, graphDiv) {\n    this.setState({graphDiv});\n    if (this.props.onRender) {\n      this.props.onRender(graphDiv.data, graphDiv.layout, graphDiv._transitionData._frames);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"plotly_editor\">\n        {!this.props.hideControls && (\n          <EditorControls\n            graphDiv={this.state.graphDiv}\n            dataSources={this.state.dataSources}\n            dataSourceOptions={this.state.dataSourceOptions}\n            // dataSources={this.props.dataSources}\n            // dataSourceOptions={this.props.dataSourceOptions}\n            plotly={this.props.plotly}\n            // onUpdate={this.props.onUpdate}\n            onUpdate={this.handleEditorUpdate.bind(this)}\n            onUpdateTraces={this.handleEditorUpdateTraces}\n            revision={this.state.editorRevision}\n            advancedTraceTypeSelector={this.props.advancedTraceTypeSelector}\n            locale={this.props.locale}\n            traceTypesConfig={this.props.traceTypesConfig}\n            dictionaries={this.props.dictionaries}\n            showFieldTooltips={this.props.showFieldTooltips}\n            srcConverters={this.props.srcConverters}\n            makeDefaultTrace={this.props.makeDefaultTrace}\n            glByDefault={this.props.glByDefault}\n            mapBoxAccess={Boolean(this.props.config && this.props.config.mapboxAccessToken)}\n            fontOptions={this.props.fontOptions}\n            chartHelp={this.props.chartHelp}\n            customConfig={this.props.customConfig}\n          >\n            {this.props.children}\n          </EditorControls>\n        )}\n        <div className=\"plotly_editor_plot\" style={{width: '100%', height: '100%'}}>\n          {this.state.loading ? <p>Loading</p> : null}\n          <this.PlotComponent\n            // data={this.props.data}\n            // layout={this.props.layout}\n            // frames={this.props.frames}\n            data={this.state.graphDiv.data}\n            layout={this.state.graphDiv.layout}\n            frames={this.state.graphDiv.frames}\n            config={this.props.config}\n            useResizeHandler={this.props.useResizeHandler}\n            debug={this.props.debug}\n            onInitialized={this.handleRender}\n            onUpdate={this.handleRender}\n            style={{width: '100%', height: '100%'}}\n            divId={this.props.divId}\n            revision={this.state.plotRevision}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nPlotlyEditor.propTypes = {\n  children: PropTypes.any,\n  layout: PropTypes.object,\n  data: PropTypes.array,\n  config: PropTypes.object,\n  dataSourceOptions: PropTypes.array,\n  dataSources: PropTypes.object,\n  frames: PropTypes.array,\n  onUpdate: PropTypes.func,\n  onRender: PropTypes.func,\n  plotly: PropTypes.object,\n  useResizeHandler: PropTypes.bool,\n  debug: PropTypes.bool,\n  advancedTraceTypeSelector: PropTypes.bool,\n  locale: PropTypes.string,\n  traceTypesConfig: PropTypes.object,\n  dictionaries: PropTypes.object,\n  divId: PropTypes.string,\n  hideControls: PropTypes.bool,\n  showFieldTooltips: PropTypes.bool,\n  srcConverters: PropTypes.shape({\n    toSrc: PropTypes.func.isRequired,\n    fromSrc: PropTypes.func.isRequired\n  }),\n  makeDefaultTrace: PropTypes.func,\n  glByDefault: PropTypes.bool,\n  fontOptions: PropTypes.array,\n  chartHelp: PropTypes.object,\n  customConfig: PropTypes.object\n};\n\nPlotlyEditor.defaultProps = {\n  hideControls: false,\n  showFieldTooltips: false,\n  fontOptions: DEFAULT_FONTS\n};\n\nexport default PlotlyEditor;\n"],"file":"PlotlyEditor.js"}