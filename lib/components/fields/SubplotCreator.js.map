{"version":3,"sources":["../../../src/components/fields/SubplotCreator.js"],"names":["UnconnectedSingleSubplotCreator","currentAxisId","props","fullContainer","attr","currentTraceIndex","index","context","fullData","some","d","layoutAttr","updateContainer","subplots","fullLayout","_subplots","lastSubplotNumber","Number","length","split","SUBPLOT_TO_ATTR","layout","update","currentSubplotId","data","subplotToBeGarbageCollected","trace","onUpdate","type","EDITOR_ACTIONS","UPDATE_TRACES","payload","traceIndexes","icon","extraComponent","canAddSubplot","addAndUpdateSubplot","label","options","u","updateSubplot","Component","propTypes","PropTypes","string","array","container","object","func","contextTypes","SingleSubplotCreator","UnconnectedSubplotCreator","subplotType","t","isFirstTraceOfAxisType","filter","_","localize","getOptions","map","subplotId","value","setPanel","modifyPlotProps","plotProps","isVisible"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Dropdown from './Dropdown';\nimport Info from './Info';\nimport PropTypes from 'prop-types';\nimport {EDITOR_ACTIONS, SUBPLOT_TO_ATTR, subplotName} from 'lib/constants';\nimport Button from '../widgets/Button';\nimport {PlusIcon} from 'plotly-icons';\nimport {connectToContainer, traceTypeToAxisType, getSubplotTitle} from 'lib';\nimport {PlotlySection} from 'components';\n\nclass UnconnectedSingleSubplotCreator extends Component {\n  canAddSubplot() {\n    const currentAxisId = this.props.fullContainer[this.props.attr];\n    const currentTraceIndex = this.props.fullContainer.index;\n    return this.context.fullData.some(\n      (d) => d.index !== currentTraceIndex && d[this.props.attr] === currentAxisId\n    );\n  }\n\n  addAndUpdateSubplot() {\n    const {attr, layoutAttr, updateContainer} = this.props;\n    const {\n      fullLayout: {_subplots: subplots},\n    } = this.context;\n    const lastSubplotNumber =\n      Number(\n        subplots[layoutAttr][subplots[layoutAttr].length - 1].split(\n          SUBPLOT_TO_ATTR[layoutAttr].layout\n        )[1]\n      ) || 1;\n\n    updateContainer({\n      [attr]: SUBPLOT_TO_ATTR[layoutAttr].layout + (lastSubplotNumber + 1),\n    });\n  }\n\n  updateSubplot(update) {\n    const currentSubplotId = this.props.fullContainer[SUBPLOT_TO_ATTR[this.props.layoutAttr].data];\n    let subplotToBeGarbageCollected = null;\n\n    // When we select another subplot, make sure no unused axes are left\n    if (\n      currentSubplotId !== update &&\n      !this.context.fullData.some(\n        (trace) =>\n          trace[SUBPLOT_TO_ATTR[this.props.layoutAttr].data] === currentSubplotId &&\n          trace.index !== this.props.fullContainer.index\n      )\n    ) {\n      subplotToBeGarbageCollected = currentSubplotId;\n    }\n\n    this.context.onUpdate({\n      type: EDITOR_ACTIONS.UPDATE_TRACES,\n      payload: {\n        subplotToBeGarbageCollected,\n        update: {[this.props.attr]: update},\n        traceIndexes: [this.props.fullContainer.index],\n      },\n    });\n  }\n\n  render() {\n    const icon = <PlusIcon />;\n    const extraComponent = this.canAddSubplot() ? (\n      <Button variant=\"no-text\" icon={icon} onClick={() => this.addAndUpdateSubplot()} />\n    ) : (\n      <Button variant=\"no-text--disabled\" icon={icon} onClick={() => {}} />\n    );\n\n    return (\n      <Dropdown\n        label={this.props.label}\n        attr={this.props.attr}\n        clearable={false}\n        options={this.props.options}\n        updatePlot={(u) => this.updateSubplot(u)}\n        extraComponent={extraComponent}\n      />\n    );\n  }\n}\n\nUnconnectedSingleSubplotCreator.propTypes = {\n  attr: PropTypes.string,\n  layoutAttr: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.array,\n  container: PropTypes.object,\n  fullContainer: PropTypes.object,\n  updateContainer: PropTypes.func,\n};\n\nUnconnectedSingleSubplotCreator.contextTypes = {\n  fullLayout: PropTypes.object,\n  data: PropTypes.array,\n  fullData: PropTypes.array,\n  onUpdate: PropTypes.func,\n};\n\nconst SingleSubplotCreator = connectToContainer(UnconnectedSingleSubplotCreator);\n\nclass UnconnectedSubplotCreator extends Component {\n  render() {\n    const subplotType = traceTypeToAxisType(this.props.container.type);\n    if (!['geo', 'mapbox', 'polar', 'gl3d', 'ternary'].some((t) => t === subplotType)) {\n      return null;\n    }\n\n    const isFirstTraceOfAxisType =\n      this.context.data.filter((d) => traceTypeToAxisType(d.type) === subplotType).length === 1;\n    if (isFirstTraceOfAxisType) {\n      return null;\n    }\n\n    const {fullLayout, localize: _} = this.context;\n\n    function getOptions(subplotType) {\n      return fullLayout._subplots[subplotType].map((subplotId) => ({\n        label: getSubplotTitle(subplotId, subplotType, _),\n        value: subplotId,\n      }));\n    }\n\n    return (\n      <PlotlySection name={_('Subplots to Use')}>\n        <SingleSubplotCreator\n          attr={SUBPLOT_TO_ATTR[subplotType].data}\n          layoutAttr={subplotType}\n          label={subplotName(SUBPLOT_TO_ATTR[subplotType].layout, _)}\n          options={getOptions(subplotType)}\n        />\n        <Info>\n          {_('You can style and position your subplots in the ')}\n          <a onClick={() => this.context.setPanel('Structure', 'Subplots')}>{_('Subplots')}</a>\n          {_(' panel.')}\n        </Info>\n      </PlotlySection>\n    );\n  }\n}\n\nUnconnectedSubplotCreator.propTypes = {\n  container: PropTypes.object,\n  fullContainer: PropTypes.object,\n};\n\nUnconnectedSubplotCreator.contextTypes = {\n  data: PropTypes.array,\n  fullData: PropTypes.array,\n  fullLayout: PropTypes.object,\n  localize: PropTypes.func,\n  setPanel: PropTypes.func,\n};\n\nexport default connectToContainer(UnconnectedSubplotCreator, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {data} = context;\n    const {fullContainer} = plotProps;\n\n    plotProps.isVisible =\n      data.length > 1 &&\n      data[fullContainer.index] &&\n      ['geo', 'mapbox', 'polar', 'gl3d', 'ternary'].some(\n        (t) => t === traceTypeToAxisType(data[fullContainer.index].type)\n      );\n  },\n});\n"],"file":"SubplotCreator.js"}