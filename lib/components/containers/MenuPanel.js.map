{"version":3,"sources":["../../../src/components/containers/MenuPanel.js"],"names":["MenuPanel","state","isOpen","togglePanel","bind","props","question","Icon","icon","spanClass","setState","show","ownline","label","children","containerClass","getIcon","Component","propTypes","PropTypes","node","oneOfType","func","string","bool"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,S;;;;;AACnB,uBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAJY;AAKb;;;;WAED,mBAAU;AACR,wBAA+B,KAAKC,KAApC;AAAA,UAAOC,QAAP,eAAOA,QAAP;AAAA,UAAuBC,IAAvB,eAAiBC,IAAjB;;AACA,UAAIF,QAAJ,EAAc;AACZ,eAAO;AACLE,UAAAA,IAAI,eAAE,6BAAC,yBAAD;AAAc,YAAA,SAAS,EAAC;AAAxB,YADD;AAELC,UAAAA,SAAS;AAFJ,SAAP;AAID;;AACD,UAAIF,IAAJ,EAAU;AACR,eAAO;AACLC,UAAAA,IAAI,eAAE,6BAAC,IAAD;AAAM,YAAA,SAAS,EAAC;AAAhB,YADD;AAELC,UAAAA,SAAS;AAFJ,SAAP;AAID;;AACD,aAAO;AACLD,QAAAA,IAAI,eAAE,6BAAC,oBAAD;AAAS,UAAA,SAAS,EAAC;AAAnB,UADD;AAELC,QAAAA,SAAS,EAAE;AAFN,OAAP;AAID;;;WAED,uBAAc;AACZ,WAAKC,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAArB,OAAd;AACD;;;WAED,kBAAS;AACP,yBAAyC,KAAKG,KAA9C;AAAA,UAAOM,IAAP,gBAAOA,IAAP;AAAA,UAAaC,OAAb,gBAAaA,OAAb;AAAA,UAAsBC,KAAtB,gBAAsBA,KAAtB;AAAA,UAA6BC,QAA7B,gBAA6BA,QAA7B;AACA,UAAMZ,MAAM,GAAGS,IAAI,IAAI,KAAKV,KAAL,CAAWC,MAAlC;AAEA,UAAMa,cAAc,GAAG,yBAAW,WAAX,EAAwB;AAC7C,8BAAsBH;AADuB,OAAxB,CAAvB;;AAIA,0BAA0B,KAAKI,OAAL,EAA1B;AAAA,UAAOR,IAAP,iBAAOA,IAAP;AAAA,UAAaC,SAAb,iBAAaA,SAAb;;AAEA,0BACE;AAAK,QAAA,SAAS,EAAEM;AAAhB,sBACE;AAAK,QAAA,SAAS,EAAEN;AAAhB,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,SAAmCI,KAAnC,CADF,eAEE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,OAAO,EAAE,KAAKV;AAAxD,SACGK,IADH,CAFF,CADF,EAOGN,MAAM,iBAAI,6BAAC,iBAAD;AAAU,QAAA,OAAO,EAAE,KAAKC;AAAxB,SAAsCW,QAAtC,CAPb,CADF;AAWD;;;;EArDoCG,gB;;;AAwDvCjB,SAAS,CAACkB,SAAV,GAAsB;AACpBJ,EAAAA,QAAQ,EAAEK,mBAAUC,IADA;AAEpBZ,EAAAA,IAAI,EAAEW,mBAAUE,SAAV,CAAoB,CAACF,mBAAUC,IAAX,EAAiBD,mBAAUG,IAA3B,CAApB,CAFc;AAGpBT,EAAAA,KAAK,EAAEM,mBAAUI,MAHG;AAIpBX,EAAAA,OAAO,EAAEO,mBAAUK,IAJC;AAKpBlB,EAAAA,QAAQ,EAAEa,mBAAUK,IALA;AAMpBb,EAAAA,IAAI,EAAEQ,mBAAUK;AANI,CAAtB","sourcesContent":["import ModalBox from './ModalBox';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport classnames from 'classnames';\nimport {QuestionIcon, CogIcon} from 'plotly-icons';\n\nexport default class MenuPanel extends Component {\n  constructor() {\n    super();\n    this.state = {isOpen: false};\n\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  getIcon() {\n    const {question, icon: Icon} = this.props;\n    if (question) {\n      return {\n        icon: <QuestionIcon className=\"menupanel__icon\" />,\n        spanClass: `menupanel__icon-span menupanel__icon-span--question`,\n      };\n    }\n    if (Icon) {\n      return {\n        icon: <Icon className=\"menupanel__icon\" />,\n        spanClass: `menupanel__icon-span`,\n      };\n    }\n    return {\n      icon: <CogIcon className=\"menupanel__icon\" />,\n      spanClass: 'menupanel__icon-span menupanel__icon-span--cog',\n    };\n  }\n\n  togglePanel() {\n    this.setState({isOpen: !this.state.isOpen});\n  }\n\n  render() {\n    const {show, ownline, label, children} = this.props;\n    const isOpen = show || this.state.isOpen;\n\n    const containerClass = classnames('menupanel', {\n      'menupanel--ownline': ownline,\n    });\n\n    const {icon, spanClass} = this.getIcon();\n\n    return (\n      <div className={containerClass}>\n        <div className={spanClass}>\n          <div className=\"menupanel__label\">{label}</div>\n          <div className=\"menupanel__icon__wrapper\" onClick={this.togglePanel}>\n            {icon}\n          </div>\n        </div>\n        {isOpen && <ModalBox onClose={this.togglePanel}>{children}</ModalBox>}\n      </div>\n    );\n  }\n}\n\nMenuPanel.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  label: PropTypes.string,\n  ownline: PropTypes.bool,\n  question: PropTypes.bool,\n  show: PropTypes.bool,\n};\n"],"file":"MenuPanel.js"}